apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
  labels:
    app: api
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: api
    spec:
      affinity: {}
      containers:
      - name: api
        image: drashkko/metafox-api:latest
        imagePullPolicy: Always
        env:
          - name: BROKER_URL
            value: pyamqp://ceramo:metafox_2025@rabbitmq-backend-service.default.svc.cluster.local:5672//
          - name: RESULT_BACKEND
            value: redis://:metafox_2025@redis-backend-service.default.svc.cluster.local:6379/0
          - name: WORKER_CONCURRENCY
            value: "1"
          - name: KEYCLOAK_SERVER_URL
            value: ""
          - name: KEYCLOAK_CLIENT_ID
            value: ""
          - name: KEYCLOAK_REALM_NAME
            value: ""
          - name: KEYCLOAK_CLIENT_SECRET
            value: ""
          - name: KEYCLOAK_AUTHORIZATION_URL
            value: ""
          - name: KEYCLOAK_TOKEN_URL
            value: ""
          - name: KEYCLOAK_REFRESH_URL
            value: ""
          - name: CORS_ORIGINS
            value: ""
          - name: API_AUTH_ENABLED
            value: "False"
          - name: API_ORIGINS
            value: "*"
          - name: API_ALLOW_CREDENTIALS
            value: "True"
          - name: API_ALLOW_METHODS
            value: "*"
          - name: API_ALLOW_HEADERS
            value: "*"
          - name: MONGO_URI
            value: mongodb://ceramo:metafox_2025@mongo-backend-service.default.svc.cluster.local:27017
          - name: MONGO_COLLECTION_TASK_META
            value: task_meta
          - name: MONGO_COLLECTION_AUTOML_JOB_DETAILS
            value: automl_job_details
          - name: MONGO_COLLECTION_TASK_INFO
            value: task_info
          - name: REDIS_HOST
            value: redis-backend-service.default.svc.cluster.local
          - name: REDIS_PORT
            value: "6379"
          - name: REDIS_DB
            value: "0"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis-secret
                key: redis-password
          - name: DB_TYPE
            value: redis
        ports:
        - containerPort: 8000
          protocol: TCP
          name: api-port
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
  labels:
    app: api
spec:
  selector:
    app: api
  ports:
  - port: 8000
    targetPort: api-port
    nodePort: 30502
    protocol: TCP
  type: NodePort