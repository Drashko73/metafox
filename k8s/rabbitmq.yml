apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-backend-deployment
  namespace: default
  labels:
    app: rabbitmq-backend
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rabbitmq-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: rabbitmq-backend
    spec:
      affinity: {}
      containers:
      - name: rabbitmq-backend
        image: rabbitmq:latest
        imagePullPolicy: Always
        env:
          - name: RABBITMQ_DEFAULT_USER
            value: ceramo
          - name: RABBITMQ_DEFAULT_PASS
            value: metafox_2025
        ports:
        - containerPort: 5672
          protocol: TCP
          name: rabbitmq-port
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/rabbitmq/data
          name: rabbitmq-volume
          subPath: "rabbitmq_data"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: rabbitmq-volume
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-backend-service
  namespace: default
  labels:
    app: rabbitmq-backend
spec:
  selector:
    app: rabbitmq-backend
  ports:
  - protocol: TCP
    port: 5672
    targetPort: 5672
    nodePort: 30503
  type: NodePort