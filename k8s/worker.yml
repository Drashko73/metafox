apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  namespace: default
  labels:
    app: worker
spec:
  replicas: 4
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: worker
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: worker
    spec:
      affinity: {}
      containers:
      - name: worker
        image: drashkko/metafox-worker:latest
        imagePullPolicy: Always
        env:
          - name: BROKER_URL
            value: pyamqp://ceramo:metafox_2025@rabbitmq-backend-service.default.svc.cluster.local:5672//
          - name: RESULT_BACKEND
            value: redis://:metafox_2025@redis-backend-service.default.svc.cluster.local:6379/0
          - name: WORKER_CONCURRENCY
            value: "1"
          - name: MONGO_DB
            value: metafox
          - name: MONGO_URI
            value: mongodb://ceramo:metafox_2025@mongo-backend-service.default.svc.cluster.local:27017
          - name: MONGO_COLLECTION_TASK_META
            value: task_meta
          - name: MONGO_COLLECTION_AUTOML_JOB_DETAILS
            value: automl_job_details
          - name: MONGO_COLLECTION_TASK_INFO
            value: task_info
          - name: REDIS_HOST
            value: redis-backend-service.default.svc.cluster.local
          - name: REDIS_PORT
            value: "6379"
          - name: REDIS_DB
            value: "0"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis-secret
                key: redis-password
          - name: DB_TYPE
            value: redis
        resources:
          limits:
            cpu: 600m
            memory: 512Mi
          requests:
            cpu: 300m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30