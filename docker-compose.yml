services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - metafox_network

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis_data:/data/db_redis
    networks:
      - metafox_network

  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo_data:/data/db_mongo
    networks:
      - metafox_network

  api:
    build:
      context: .
      dockerfile: src/metafox_api/Dockerfile
    container_name: api
    environment:
        BROKER_URL: pyamqp://rabbitmq:5672//
        RESULT_BACKEND: redis://redis:6379/0
        WORKER_CONCURRENCY: 1
        KEYCLOAK_SERVER_URL:
        KEYCLOAK_CLIENT_ID:
        KEYCLOAK_REALM_NAME:
        KEYCLOAK_CLIENT_SECRET:
        KEYCLOAK_AUTHORIZATION_URL:
        KEYCLOAK_TOKEN_URL:
        KEYCLOAK_REFRESH_URL:
        CORS_ORIGINS:
        API_AUTH_ENABLED: "False"
        API_ORIGINS: "*"
        API_ALLOW_CREDENTIALS: "True"
        API_ALLOW_METHODS: "*"
        API_ALLOW_HEADERS: "*"
        MONGO_DB: metafox
        MONGO_URI: mongodb://mongo:27017/
        MONGO_COLLECTION_TASK_META: task_meta
        MONGO_COLLECTION_AUTOML_JOB_DETAILS: automl_job_details
        MONGO_COLLECTION_TASK_INFO: task_info
        REDIS_HOST: redis
        REDIS_PORT: 6379
        REDIS_DB: 0
        DB_TYPE: redis
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - metafox_network

  worker:
    build:
      context: .
      dockerfile: src/metafox_worker/Dockerfile
    environment:
        BROKER_URL: pyamqp://rabbitmq:5672//
        RESULT_BACKEND: redis://redis:6379/0
        WORKER_CONCURRENCY: 1
        MONGO_DB: metafox
        MONGO_URI: mongodb://mongo:27017/
        MONGO_COLLECTION_TASK_META: task_meta
        MONGO_COLLECTION_AUTOML_JOB_DETAILS: automl_job_details
        MONGO_COLLECTION_TASK_INFO: task_info
        REDIS_HOST: redis
        REDIS_PORT: 6379
        REDIS_DB: 0
        DB_TYPE: redis
    depends_on:
      - api
      - rabbitmq
      - redis
    networks:
      - metafox_network
    deploy:
      replicas: 4

  flower:
    image: mher/flower
    container_name: flower
    environment:
        BROKER_URL: pyamqp://rabbitmq:5672//
        RESULT_BACKEND: redis://redis:6379/0
        FLOWER_PERSISTENT: "True"
        FLOWER_STATE_SAVE_INTERVAL: 10000
        FLOWER_DB: flower_db
        FLOWER_BASIC_AUTH:
    ports:
      - "5555:5555"
    depends_on:
      - api
      - rabbitmq
      - redis
    volumes:
      - flower_data:/data/flower
    networks:
      - metafox_network

volumes:
  rabbitmq_data:
  redis_data:
  mongo_data:
  flower_data:

networks:
  metafox_network:
    driver: bridge